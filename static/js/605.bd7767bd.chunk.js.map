{"version":3,"file":"static/js/605.bd7767bd.chunk.js","mappings":"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","sources":["shared/cloud-gtlf/cloud-gtlf.js","components/nodes/node.js","components/site-canvas/site-playground/site-scene.js","config/constants.js","shared/bb-anchor.js","shared/truck-cloud-gtlf/truck-params.js","shared/truck-cloud-gtlf/truck-cloud-gtlf-group.js","shared/truck-cloud-gtlf/truck-cloud-gtlf.js","components/site-canvas/site-playground/site-playground.js"],"sourcesContent":["import { meshBounds, useCursor, useGLTF } from \"@react-three/drei\";\r\nimport { forwardRef, Suspense, useMemo, useRef, useState } from \"react\";\r\nimport { MeshBasicMaterial, MeshStandardMaterial } from \"three\";\r\nimport { isMobile } from \"../../utils/utils\";\r\n\r\nimport \"./cloud-gtlf.scss\";\r\n\r\nexport const CloudGLTF = forwardRef((props, ref) => {\r\n  const { scene } = useGLTF(props.cloudGlbURL);\r\n  const [hovered, set] = useState();\r\n  useCursor(hovered, \"pointer\");\r\n\r\n  // const group = useRef();\r\n  const isMob = isMobile();\r\n\r\n  const copiedScene = useMemo(() => {\r\n    scene.children.forEach(function (m) {\r\n      if (m.isMesh) {\r\n        if (props.fast || isMob) {\r\n          m.material = new MeshBasicMaterial({ color: m.material.color });\r\n        } else {\r\n          m.material = new MeshStandardMaterial({\r\n            color: m.material.color,\r\n            metalness: 1,\r\n            emissive: 1,\r\n            roughness: 0.5,\r\n          });\r\n        }\r\n      }\r\n    });\r\n    return scene.clone();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [scene.uuid]);\r\n\r\n  const onPointerOver = (e) => {\r\n    e.stopPropagation();\r\n    set(true);\r\n  };\r\n\r\n  const onPointerOut = (e) => {\r\n    e.stopPropagation();\r\n    set(false);\r\n  };\r\n\r\n  if (props.fast) {\r\n    return (\r\n      <Suspense fallback={null}>\r\n        <group\r\n          ref={ref}\r\n          {...props}\r\n          dispose={null}\r\n          onPointerOver={onPointerOver}\r\n          onPointerOut={onPointerOut}\r\n        >\r\n          <primitive object={copiedScene} />\r\n        </group>\r\n      </Suspense>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Suspense fallback={null}>\r\n      <group\r\n        ref={ref}\r\n        {...props}\r\n        dispose={null}\r\n        onPointerOver={onPointerOver}\r\n        onPointerOut={onPointerOut}\r\n        className=\"cursor-pointer\"\r\n      >\r\n        {copiedScene.children.map((_, i) => (\r\n          <CloudGLTFGroup\r\n            key={i + _.name}\r\n            {...props}\r\n            node={_}\r\n            index={i}\r\n            onHover={() => props.onHover(ref)}\r\n          />\r\n        ))}\r\n      </group>\r\n    </Suspense>\r\n  );\r\n});\r\n\r\nfunction CloudGLTFGroup({ ...props }) {\r\n  const meshRef = useRef();\r\n  // useBVH(meshRef);\r\n\r\n  if (props.node.type === \"Group\") {\r\n    return (\r\n      <group\r\n        rotation={props.node.rotation}\r\n        position={props.node.position}\r\n        scale={props.node.scale}\r\n        frustumCulled\r\n      >\r\n        {props.node.children.length > 0 &&\r\n          props.node.children.map((_, i) => (\r\n            <CloudGLTFGroup key={i + _.name} {...props} node={_} index={i} />\r\n          ))}\r\n      </group>\r\n    );\r\n  }\r\n  return (\r\n    <mesh\r\n      geometry={props.node.geometry}\r\n      material={props.node.material}\r\n      rotation={props.node.rotation}\r\n      position={props.node.position}\r\n      ref={meshRef}\r\n      raycast={meshBounds}\r\n      scale={props.node.scale}\r\n      onPointerOver={(e) => {\r\n        e.stopPropagation();\r\n        props.onHover(meshRef);\r\n      }}\r\n      onPointerOut={(e) => {\r\n        e.stopPropagation();\r\n        props.onHover(null);\r\n      }}\r\n      onClick={(e) => {\r\n        e.stopPropagation();\r\n        props.onHover(meshRef);\r\n      }}\r\n    >\r\n      {props.node.children.length > 0 &&\r\n        props.node.children.map((_, i) => (\r\n          <CloudGLTFGroup key={i + _.name} {...props} node={_} index={i} />\r\n        ))}\r\n    </mesh>\r\n  );\r\n}\r\n\r\nexport default CloudGLTF;\r\n","import { QuadraticBezierLine } from \"@react-three/drei\";\r\nimport { useFrame } from \"@react-three/fiber\";\r\nimport {\r\n  createContext,\r\n  forwardRef,\r\n  useContext,\r\n  useLayoutEffect,\r\n  useMemo,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport * as THREE from \"three\";\r\n\r\nconst context = createContext();\r\nconst Circle = forwardRef(\r\n  (\r\n    {\r\n      children,\r\n      opacity = 1,\r\n      radius = 0.05,\r\n      segments = 32,\r\n      color = \"#ff1050\",\r\n      ...props\r\n    },\r\n    ref\r\n  ) => (\r\n    <mesh ref={ref} {...props}>\r\n      <circleGeometry args={[radius, segments]} />\r\n      <meshBasicMaterial\r\n        transparent={opacity < 1}\r\n        opacity={opacity}\r\n        color={color}\r\n      />\r\n      {children}\r\n    </mesh>\r\n  )\r\n);\r\n\r\nexport function Nodes({ children }) {\r\n  const group = useRef();\r\n  const [nodes, set] = useState([]);\r\n  const lines = useMemo(() => {\r\n    const lines = [];\r\n    for (let node of nodes)\r\n      node.connectedTo\r\n        .map((ref) => [node.position, ref.current.position])\r\n        .forEach(([start, end]) =>\r\n          lines.push({\r\n            start: start.clone().add({ x: 0.35, y: 0, z: 0 }),\r\n            end: end.clone().add({ x: -0.35, y: 0, z: 0 }),\r\n          })\r\n        );\r\n    return lines;\r\n  }, [nodes]);\r\n  useFrame((_, delta) =>\r\n    group.current.children.forEach(\r\n      (group) =>\r\n        (group.children[0].material.uniforms.dashOffset.value -= delta * 10)\r\n    )\r\n  );\r\n  return (\r\n    <context.Provider value={set}>\r\n      <group ref={group}>\r\n        {lines.map((line, index) => (\r\n          <group key={index + \"Bezier group\"}>\r\n            <QuadraticBezierLine\r\n              key={index + \"Bezier spot\"}\r\n              {...line}\r\n              color=\"white\"\r\n              dashed\r\n              dashScale={50}\r\n              gapSize={20}\r\n            />\r\n            <QuadraticBezierLine\r\n              key={index + \"Bezier line\"}\r\n              {...line}\r\n              color=\"red\"\r\n              lineWidth={3}\r\n              transparent\r\n              opacity={0.5}\r\n            />\r\n          </group>\r\n        ))}\r\n      </group>\r\n      {children}\r\n      {lines.map(({ start, end }, index) => (\r\n        <group key={index + \"Bezier circle\"} position-z={1}>\r\n          <Circle position={start} />\r\n          <Circle position={end} />\r\n        </group>\r\n      ))}\r\n    </context.Provider>\r\n  );\r\n}\r\n\r\nexport const Node = forwardRef(\r\n  (\r\n    { color = \"black\", name, connectedTo = [], position = [0, 0, 0], ...props },\r\n    ref\r\n  ) => {\r\n    const set = useContext(context);\r\n    const [pos] = useState(() => new THREE.Vector3(...position));\r\n    const state = useMemo(\r\n      () => ({ position: pos, connectedTo }),\r\n      [pos, connectedTo]\r\n    );\r\n    // Register this node on mount, unregister on unmount\r\n    useLayoutEffect(() => {\r\n      set((nodes) => [...nodes, state]);\r\n      return () => void set((nodes) => nodes.filter((n) => n !== state));\r\n    }, [state, pos, set]);\r\n    // Drag n drop, hover\r\n    return (\r\n      <Circle\r\n        ref={ref}\r\n        opacity={0.2}\r\n        radius={0.5}\r\n        color={color}\r\n        position={pos}\r\n        {...props}\r\n      ></Circle>\r\n    );\r\n  }\r\n);\r\n","import { useMemo } from \"react\";\r\nimport { MeshBasicMaterial, MeshStandardMaterial } from \"three\";\r\nimport { isMobile } from \"../../../utils/utils\";\r\n\r\nexport const useMemoisedScene = (scene, isFast) => {\r\n  const isMob = isMobile();\r\n\r\n  const copiedScene = useMemo(() => {\r\n    const smallObj = [];\r\n    scene.traverse((o) => {\r\n      if (!o.isMesh) return;\r\n      var prevMaterial = o.material;\r\n      let radius = o.geometry?.boundingSphere.radius;\r\n      // if (radius > 10 && radius < 30) {\r\n      //   smallObj.push(o);\r\n      //   console.log(o);\r\n      // }\r\n      if (isMob || radius < 200) {\r\n        o.material = new MeshBasicMaterial({\r\n          color: prevMaterial.color,\r\n        });\r\n      } else {\r\n        o.material = new MeshStandardMaterial({\r\n          color: prevMaterial.color,\r\n          metalness: 1,\r\n          emissive: 1,\r\n          roughness: prevMaterial.roughness ?? 0.5,\r\n        });\r\n      }\r\n    });\r\n\r\n    smallObj.forEach((o) => {\r\n      o.removeFromParent();\r\n    });\r\n\r\n    return scene.clone();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [scene.uuid]);\r\n\r\n  return { copiedScene };\r\n};\r\n\r\nexport const ROTATION_LEFT = [0, -Math.PI / 2, 0];\r\nexport const ROTATION_RIGHT = [0, Math.PI / 2, 0];\r\n\r\nexport const getPos = (LEFT_POS_START, i, isOnFocus) => {\r\n  return [\r\n    LEFT_POS_START < i ? 15 : -15,\r\n    0 + isOnFocus * 10,\r\n    (i % LEFT_POS_START) * 5,\r\n  ];\r\n};\r\n\r\nexport const WELL_HEAD_POS = [0, -1, -20];\r\nexport const DATA_VAN_POS = [15, 1, -10];\r\nexport const BLENDER_VAN_POS = [10, -1, 35];\r\nexport const MISSILE_POS = [0, 0, 20];\r\nexport const MISSILE_NODE_POS = [0, 1, 20];\r\nexport const DATA_VAN_ROT = [0, Math.PI / 2, 0];\r\n","export const DEFAULT_TRUCK_CONFIG = {\r\n  engine: \"Solid3034_60\",\r\n  trans: \"Solid1061\",\r\n  fe: \"Solid3034_49\",\r\n  pe: \"Solid1040\",\r\n  chassis: \"Solid3034_36\",\r\n};\r\n","import { useFrame } from \"@react-three/fiber\";\r\nimport * as React from \"react\";\r\nimport { Box3, Vector3 } from \"three\";\r\n\r\nconst boundingBox = new Box3();\r\nconst boundingBoxSize = new Vector3();\r\n\r\nexport const BBAnchor = ({ anchor, ...props }) => {\r\n  const ref = React.useRef(null);\r\n  const parentRef = React.useRef(null);\r\n\r\n  // Reattach group created by this component to the parent's parent,\r\n  // so it becomes a sibling of its initial parent.\r\n  // We do that so the children have no impact on a bounding box of a parent.\r\n  React.useEffect(() => {\r\n    if (ref.current?.parent?.parent) {\r\n      parentRef.current = ref.current.parent;\r\n      ref.current.parent.parent.add(ref.current);\r\n    }\r\n  }, []);\r\n\r\n  useFrame(() => {\r\n    if (parentRef.current) {\r\n      boundingBox.setFromObject(parentRef.current);\r\n      boundingBox.getSize(boundingBoxSize);\r\n      let { pX, pY, pZ } = parentRef.current.position;\r\n      if (pX && pY && pZ) {\r\n        ref.current.position.set(\r\n          parentRef.current.position.x + (boundingBoxSize.x * anchor[0]) / 2,\r\n          parentRef.current.position.y + (boundingBoxSize.y * anchor[1]) / 2,\r\n          parentRef.current.position.z + (boundingBoxSize.z * anchor[2]) / 2\r\n        );\r\n      } else {\r\n        ref.current.position.set(\r\n          parentRef.current.geometry.boundingBox.min.x + anchor[0],\r\n          parentRef.current.geometry.boundingBox.min.y + anchor[1],\r\n          parentRef.current.geometry.boundingBox.min.z + anchor[2]\r\n        );\r\n      }\r\n    }\r\n  });\r\n\r\n  return <group ref={ref} {...props} />;\r\n};\r\n","import { Icon } from \"@fluentui/react\";\r\nimport { BBAnchor as DreiBBAnchor, Html } from \"@react-three/drei\";\r\nimport { DEFAULT_TRUCK_CONFIG } from \"../../config/constants\";\r\nimport { UNIT_MAP } from \"../../config/unit-mapping\";\r\nimport { BBAnchor } from \"../bb-anchor\";\r\n\r\nexport default function TruckParams({ ...props }) {\r\n  const { engine, trans, pe, fe, chassis } = DEFAULT_TRUCK_CONFIG;\r\n\r\n  return (\r\n    <>\r\n      {props.node.name === engine && props.pump[\"Engine Load\"] ? (\r\n        <BBAnchor anchor={[0, 0, 0]}>\r\n          <Html>\r\n            <div className=\"content\">\r\n              <Icon iconName=\"LightningBolt\" />\r\n              {props.pump[\"Engine Load\"].toFixed(1) + UNIT_MAP[\"Engine Load\"]}\r\n            </div>\r\n          </Html>\r\n        </BBAnchor>\r\n      ) : null}\r\n      {props.node.name === trans && props.pump[\"Trans Gear\"] ? (\r\n        <DreiBBAnchor anchor={[1, 1, 1]}>\r\n          <Html>\r\n            <div className=\"content\">\r\n              <Icon iconName=\"Settings\" />\r\n              {props.pump[\"Trans Gear\"].toFixed(1) + UNIT_MAP[\"Trans Gear\"]}\r\n            </div>\r\n          </Html>\r\n        </DreiBBAnchor>\r\n      ) : null}\r\n      {props.node.name === fe && props.pump[\"Horse Power\"] ? (\r\n        <BBAnchor anchor={[0, 0, 0]}>\r\n          <Html>\r\n            <div className=\"content\">\r\n              {props.pump[\"Horse Power\"].toFixed(1) +\r\n                UNIT_MAP[\"Calc Horse Power\"]}\r\n            </div>\r\n          </Html>\r\n        </BBAnchor>\r\n      ) : null}\r\n      {props.node.name === pe && props.pump[\"Pump Rate\"] ? (\r\n        <BBAnchor anchor={[0, 0, 0]}>\r\n          <Html>\r\n            <div className=\"content\">\r\n              <Icon iconName=\"Drop\" />\r\n\r\n              {props.pump[\"Pump Rate\"].toFixed(1) + UNIT_MAP[\"Pump Rate\"]}\r\n            </div>\r\n          </Html>\r\n        </BBAnchor>\r\n      ) : null}\r\n      {props.node.name === chassis ? (\r\n        <BBAnchor anchor={[0, 0, 0]}>\r\n          <Html>\r\n            <div className=\"chassis-content\">{props.pump[\"Pump Position\"]}</div>\r\n          </Html>\r\n        </BBAnchor>\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n","import { useBVH, useCursor } from \"@react-three/drei\";\r\nimport React, { useRef, useState } from \"react\";\r\nimport \"./truck-cloud-gtlf.scss\";\r\nimport TruckParams from \"./truck-params\";\r\n\r\nexport function TruckCloudGTLFGroup({ ...props }) {\r\n  const meshRef = useRef();\r\n  const [hovered, set] = useState();\r\n  useCursor(hovered, \"pointer\");\r\n  useBVH(meshRef);\r\n  if (props.index > 300) {\r\n    return;\r\n  }\r\n  const onPointerOver = (e) => {\r\n    e.stopPropagation();\r\n\r\n    if (!props.show) {\r\n      return;\r\n    }\r\n    props.onHover(meshRef);\r\n    set(true);\r\n  };\r\n\r\n  const onPointerOut = (e) => {\r\n    e.stopPropagation();\r\n    if (!props.show) {\r\n      return;\r\n    }\r\n    set(false);\r\n    props.onHover(null);\r\n  };\r\n\r\n  const onClick = (e) => {\r\n    e.stopPropagation();\r\n    console.log(props.node.name);\r\n    if (!props.show) {\r\n      return;\r\n    }\r\n    switch (e.detail) {\r\n      case 1: {\r\n        props.onClick(true);\r\n        break;\r\n      }\r\n      default: {\r\n        props.onDoubleClick();\r\n\r\n        break;\r\n      }\r\n    }\r\n  };\r\n\r\n  if (props.node.type.toLowerCase() !== \"mesh\") {\r\n    return (\r\n      <group\r\n        rotation={props.node.rotation}\r\n        position={props.node.position}\r\n        scale={props.node.scale}\r\n        frustumCulled\r\n      >\r\n        {props.node.children.length > 0 &&\r\n          props.node.children.map((_, i) => (\r\n            <TruckCloudGTLFGroup\r\n              key={i + _.name}\r\n              {...props}\r\n              node={_}\r\n              index={i + props.index}\r\n            />\r\n          ))}\r\n      </group>\r\n    );\r\n  }\r\n\r\n  if (props.node.type.toLowerCase() === \"mesh\") {\r\n    // const geometry = new BufferGeometry({ ...props.node.geometry });\r\n    return (\r\n      <mesh\r\n        geometry={props.node.geometry}\r\n        material={props.node.material}\r\n        rotation={props.node.rotation}\r\n        position={props.node.position}\r\n        ref={meshRef}\r\n        scale={props.node.scale}\r\n        onPointerOver={onPointerOver}\r\n        onPointerOut={onPointerOut}\r\n        onClick={onClick}\r\n        frustumCulled\r\n      >\r\n        {props.node.children.length > 0 &&\r\n          props.node.children.map((_, i) => (\r\n            <TruckCloudGTLFGroup\r\n              key={i + _.name}\r\n              {...props}\r\n              node={_}\r\n              index={i + props.index}\r\n            />\r\n          ))}\r\n        {props.isActive && props.show ? <TruckParams {...props} /> : null}\r\n      </mesh>\r\n    );\r\n  }\r\n}\r\n","import { Select } from \"@react-three/drei\";\r\nimport { useFrame } from \"@react-three/fiber\";\r\nimport React, { Suspense, useRef, useState } from \"react\";\r\nimport { TruckCloudGTLFGroup } from \"./truck-cloud-gtlf-group\";\r\nimport \"./truck-cloud-gtlf.scss\";\r\n// const TruckCloudGTLFGroup = lazy(() => import(\"./truck-cloud-gtlf-group\"));\r\n\r\nexport default function TruckCloudGTLF({ ...props }) {\r\n  const group = useRef();\r\n\r\n  const [indexSet, setIndexSet] = useState(new Set());\r\n\r\n  useFrame(() => {\r\n    group.current.visible = props.show;\r\n  });\r\n\r\n  if (props.fast) {\r\n    return (\r\n      <Suspense fallback={null}>\r\n        <group ref={group} {...props} dispose={null}>\r\n          <Select\r\n            box\r\n            multiple\r\n            onChange={(m) => {\r\n              if (m[0]) {\r\n                props.onHover(m[0]);\r\n                props.onClick(true);\r\n              }\r\n            }}\r\n          >\r\n            <primitive object={props.scene} />\r\n          </Select>\r\n        </group>\r\n      </Suspense>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Suspense fallback={null}>\r\n      <group ref={group} {...props} dispose={null} frustumCulled>\r\n        {props.scene.children.map((_, i) => (\r\n          <TruckCloudGTLFGroup\r\n            key={i + _.name}\r\n            {...props}\r\n            node={_}\r\n            index={i}\r\n            indexSet={indexSet}\r\n            setIndexSet={setIndexSet}\r\n          />\r\n        ))}\r\n      </group>\r\n    </Suspense>\r\n  );\r\n}\r\n","import { IconButton } from \"@fluentui/react\";\r\nimport { Html, useGLTF } from \"@react-three/drei\";\r\nimport { useThree } from \"@react-three/fiber\";\r\nimport { EffectComposer, Outline } from \"@react-three/postprocessing\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { MODELS } from \"../../../config/azure-gltf\";\r\nimport { PUMPS as HARD_CODED_PUMPS } from \"../../../config/pumps\";\r\n\r\nimport CloudGLTF from \"../../../shared/cloud-gtlf/cloud-gtlf\";\r\nimport { isMobile } from \"../../../utils/utils\";\r\n// import TruckCloudGTLF from \"../../../shared/truck-cloud-gtlf/truck-cloud-gtlf\";\r\nimport { Node, Nodes } from \"../../nodes/node\";\r\nimport {\r\n  BLENDER_VAN_POS,\r\n  DATA_VAN_POS,\r\n  DATA_VAN_ROT,\r\n  getPos,\r\n  MISSILE_NODE_POS,\r\n  MISSILE_POS,\r\n  ROTATION_LEFT,\r\n  ROTATION_RIGHT,\r\n  useMemoisedScene,\r\n  WELL_HEAD_POS,\r\n} from \"./site-scene\";\r\n\r\nimport TruckCloudGTLF from \"../../../shared/truck-cloud-gtlf/truck-cloud-gtlf\";\r\n\r\nfunction SitePlayGround(props) {\r\n  const isMob = isMobile();\r\n  const mRef = useRef(null);\r\n  const nCRef = useRef(null);\r\n  const wRef = useRef(null);\r\n  const dRef = useRef(null);\r\n  const [hovered, onHover] = useState(null);\r\n  const [prevCam, setPrevCam] = useState(null);\r\n  const [focussedTruck, onFocusTruck] = useState(null);\r\n  const { scene } = useGLTF(MODELS.TRUCK);\r\n  const cam = useThree(({ camera }) => camera);\r\n  const cont = useThree(({ controls }) => controls);\r\n  const PUMPS = props.pumpsData.length ? props.pumpsData : HARD_CODED_PUMPS;\r\n  const { copiedScene } = useMemoisedScene(scene);\r\n  const invalidate = useThree(({ invalidate }) => invalidate);\r\n  const isOnFocus = (pump) =>\r\n    !focussedTruck || pump[\"Pump Position\"] === focussedTruck[\"Pump Position\"];\r\n\r\n  useEffect(() => {\r\n    focussedTruck && props.setSelected(focussedTruck[\"Pump Position\"]);\r\n  }, [focussedTruck, props]);\r\n\r\n  function restoreCamera() {\r\n    cam.position.set(\r\n      prevCam.position.x,\r\n      prevCam.position.y,\r\n      prevCam.position.z\r\n    );\r\n    cont?.reset();\r\n\r\n    invalidate();\r\n  }\r\n\r\n  const isActive = (pump) => pump[\"Pump Position\"] === props.selected;\r\n\r\n  const LEFT_POS_START = PUMPS.length / 2;\r\n\r\n  const selected = hovered ? [hovered] : undefined;\r\n\r\n  return (\r\n    <>\r\n      <Nodes>\r\n        {PUMPS.map((pump, i) => {\r\n          const [x, y, z] = getPos(\r\n            LEFT_POS_START,\r\n            i,\r\n            focussedTruck &&\r\n              pump[\"Pump Position\"] === focussedTruck[\"Pump Position\"]\r\n          );\r\n          return (\r\n            <TruckCloudGTLF\r\n              key={pump[\"Pump Position\"]}\r\n              position={[x, y, z]}\r\n              onClick={() => {\r\n                props.setSelected(pump[\"Pump Position\"]);\r\n                invalidate();\r\n              }}\r\n              onDoubleClick={() => {\r\n                if (isOnFocus(pump)) {\r\n                  cont?.saveState();\r\n                  const camToSave = {};\r\n                  camToSave.position = cam.position.clone();\r\n                  camToSave.rotation = cam.rotation.clone();\r\n                  camToSave.controlCenter = cont?.target?.clone();\r\n\r\n                  setPrevCam(camToSave);\r\n\r\n                  props.setSelected(pump[\"Pump Position\"]);\r\n                  onFocusTruck(pump);\r\n                  cam.position.set(4.5 * x, y + 9, 3 * z);\r\n                  invalidate();\r\n                }\r\n              }}\r\n              onHover={onHover}\r\n              isActive={props.selectionOptions[\"Select All\"] || isActive(pump)}\r\n              show={isOnFocus(pump)}\r\n              isFocussed={\r\n                focussedTruck &&\r\n                pump[\"Pump Position\"] === focussedTruck[\"Pump Position\"]\r\n              }\r\n              scene={copiedScene}\r\n              pump={pump}\r\n              setAlertedParts={props.setAlertedParts}\r\n              rotation={LEFT_POS_START < i ? ROTATION_LEFT : ROTATION_RIGHT}\r\n              cloudGlbURL={MODELS.TRUCK}\r\n              scale={focussedTruck ? 2 : 1}\r\n            />\r\n          );\r\n        })}\r\n\r\n        {!focussedTruck ? (\r\n          <>\r\n            <CloudGLTF\r\n              ref={mRef}\r\n              cloudGlbURL={MODELS.MISSILE}\r\n              assetId={4347}\r\n              onClick={(show) => null}\r\n              onHover={onHover}\r\n              position={MISSILE_POS}\r\n            />\r\n            <Node\r\n              ref={nCRef}\r\n              name=\"missile\"\r\n              position={MISSILE_NODE_POS}\r\n              connectedTo={[wRef]}\r\n            />\r\n            <CloudGLTF\r\n              ref={wRef}\r\n              cloudGlbURL={MODELS.WELL_HEAD}\r\n              onClick={(show) => null}\r\n              onHover={onHover}\r\n              position={WELL_HEAD_POS}\r\n              scale={5}\r\n            />\r\n\r\n            <CloudGLTF\r\n              ref={dRef}\r\n              cloudGlbURL={MODELS.DATA_VAN}\r\n              onClick={(show) => null}\r\n              onHover={onHover}\r\n              position={DATA_VAN_POS}\r\n              rotation={DATA_VAN_ROT}\r\n            />\r\n          </>\r\n        ) : null}\r\n        {!isMob && !focussedTruck ? (\r\n          <CloudGLTF\r\n            cloudGlbURL={MODELS.BLENDER}\r\n            onClick={(show) => null}\r\n            fast\r\n            onHover={onHover}\r\n            position={BLENDER_VAN_POS}\r\n            rotation={ROTATION_RIGHT}\r\n          />\r\n        ) : null}\r\n      </Nodes>\r\n\r\n      <EffectComposer multisampling={8} autoClear={false}>\r\n        <Outline\r\n          selection={selected}\r\n          selectionLayer={1}\r\n          visibleEdgeColor=\"white\"\r\n          edgeStrength={5}\r\n        />\r\n      </EffectComposer>\r\n      <Html left portal={props.domNodeRef}>\r\n        {focussedTruck ? (\r\n          <div>\r\n            <IconButton\r\n              className=\"text-neutralPrimary bg-themeLighterAlt\"\r\n              iconProps={{ iconName: \"Back\" }}\r\n              onClick={() => {\r\n                onFocusTruck(null);\r\n                restoreCamera();\r\n                invalidate();\r\n              }}\r\n              text=\"Back to Frac site\"\r\n            />\r\n          </div>\r\n        ) : null}\r\n      </Html>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SitePlayGround;\r\n"],"names":["CloudGLTFGroup","props","meshRef","useRef","node","type","rotation","position","scale","frustumCulled","children","length","map","_","i","index","name","geometry","material","ref","raycast","meshBounds","onPointerOver","e","stopPropagation","onHover","onPointerOut","onClick","forwardRef","scene","useGLTF","cloudGlbURL","useState","hovered","set","useCursor","isMob","isMobile","copiedScene","useMemo","forEach","m","isMesh","fast","MeshBasicMaterial","color","MeshStandardMaterial","metalness","emissive","roughness","clone","uuid","Suspense","fallback","dispose","object","className","context","createContext","Circle","opacity","radius","segments","args","transparent","Nodes","group","nodes","lines","connectedTo","current","start","end","push","add","x","y","z","useFrame","delta","uniforms","dashOffset","value","Provider","line","QuadraticBezierLine","dashed","dashScale","gapSize","lineWidth","Node","useContext","THREE","pos","state","useLayoutEffect","filter","n","ROTATION_LEFT","Math","PI","ROTATION_RIGHT","WELL_HEAD_POS","DATA_VAN_POS","BLENDER_VAN_POS","MISSILE_POS","MISSILE_NODE_POS","DATA_VAN_ROT","DEFAULT_TRUCK_CONFIG","boundingBox","Box3","boundingBoxSize","Vector3","BBAnchor","anchor","React","parentRef","parent","setFromObject","getSize","pX","pY","pZ","min","TruckParams","engine","trans","pe","fe","chassis","pump","Html","Icon","iconName","toFixed","UNIT_MAP","TruckCloudGTLFGroup","useBVH","toLowerCase","show","console","log","detail","onDoubleClick","isActive","TruckCloudGTLF","Set","indexSet","setIndexSet","visible","Select","box","multiple","onChange","mRef","nCRef","wRef","dRef","prevCam","setPrevCam","focussedTruck","onFocusTruck","MODELS","cam","useThree","camera","cont","controls","PUMPS","pumpsData","HARD_CODED_PUMPS","isFast","traverse","o","prevMaterial","boundingSphere","removeFromParent","useMemoisedScene","invalidate","isOnFocus","useEffect","setSelected","selected","LEFT_POS_START","undefined","getPos","saveState","camToSave","controlCenter","target","selectionOptions","isFocussed","setAlertedParts","assetId","multisampling","autoClear","selection","selectionLayer","visibleEdgeColor","edgeStrength","left","portal","domNodeRef","IconButton","iconProps","reset","text"],"sourceRoot":""}