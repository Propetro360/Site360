{"version":3,"file":"static/js/677.ac049422.chunk.js","mappings":"kOAKe,SAASA,EAAT,GAAkC,IAAVC,EAAS,oBACtCC,GAAUC,EAAAA,EAAAA,GAAQF,EAAMG,aAAxBF,MACFG,GAAQC,EAAAA,EAAAA,UACRC,GAAcC,EAAAA,EAAAA,UAAQ,WAM1B,OALAN,EAAMO,SAASC,SAAQ,SAAUC,GAC3BA,EAAOC,SACTD,EAAOE,UAAP,UAAuBF,EAAOE,cAG3BX,EAAMY,UACZ,CAACZ,IAEEa,EAAmB,SAACC,EAAGC,GAC3BD,EAAEE,kBACED,IAAWhB,EAAMkB,WACnBlB,EAAMmB,QAAQ,MAEdnB,EAAMmB,QAAQH,IAIlB,OACE,kCACEI,IAAKhB,GACDJ,GAFN,IAGEqB,QAAS,KACTC,UAAU,iBACVC,QAAS,SAACR,GACRA,EAAEE,kBACFjB,EAAMuB,WAERC,aAAc,CAAEC,KAAM,CAAC,EAAG,EAAG,GAAIC,MAAO,MAT1C,SAWGpB,EAAYE,SAASmB,KAAI,SAACC,EAAGC,GAAJ,OACxB,SAACC,GAAD,kBAEM9B,GAFN,IAGE+B,KAAMH,EACNd,iBAAkBA,EAClBkB,MAAOH,IAJFA,EAAID,EAAEK,YAWrB,SAASH,EAAT,GAAuC,IAAV9B,EAAS,oBAC9BkC,GAAU7B,EAAAA,EAAAA,UAEhB,OACE,kBACE8B,SAAUnC,EAAM+B,KAAKI,SACrBvB,SAAUZ,EAAM+B,KAAKnB,SACrBQ,IAAKc,EACLE,cAAe,SAACrB,GACdA,EAAEE,kBACFjB,EAAMmB,QAAQe,IAEhBG,aAAc,SAACtB,GAAD,OAAOf,EAAMmB,QAAQ,OACnCI,QAAS,SAACR,GAAD,OAAOf,EAAMc,iBAAiBC,EAAGmB,IAT5C,UAWGlC,EAAM+B,KAAKvB,SAAS8B,OAAS,IAC5B,2BACGtC,EAAM+B,KAAKvB,SAASmB,KAAI,SAACC,EAAGC,GAAJ,OACvB,SAACC,GAAD,kBAAqC9B,GAArC,IAA4C+B,KAAMH,EAAGI,MAAOH,IAAvCA,EAAID,EAAEK,YAIjC,iCACEM,MAAOC,EAAAA,EAAWxC,EAAMgC,OACxBS,UAAW,EACXC,UAAW,GACXC,iBAAkB,GAClBC,eAAgB,EAChBC,gBAAiB,EACjBC,kBAAmB,SACnBC,YAAa,KAEf,SAACC,EAAA,EAAD,CAAMC,eAAgB,GAAtB,UACE,gBAAK3B,UAAU,6BAAf","sources":["shared/cloud-gtlf/cloud-gtlf.js"],"sourcesContent":["import { Html, useGLTF } from \"@react-three/drei\";\r\nimport { useMemo, useRef } from \"react\";\r\nimport { PART_COLOR } from \"../dummy/unit-mapping\";\r\nimport \"./cloud-gtlf.scss\";\r\n\r\nexport default function CloudGLTF({ ...props }) {\r\n  const { scene } = useGLTF(props.cloudGlbURL);\r\n  const group = useRef();\r\n  const copiedScene = useMemo(() => {\r\n    scene.children.forEach(function (object) {\r\n      if (object.isMesh) {\r\n        object.material = { ...object.material };\r\n      }\r\n    });\r\n    return scene.clone();\r\n  }, [scene]);\r\n\r\n  const toggleActiveMesh = (e, meshId) => {\r\n    e.stopPropagation();\r\n    if (meshId === props.activeMesh) {\r\n      props.onHover(null);\r\n    } else {\r\n      props.onHover(meshId);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <group\r\n      ref={group}\r\n      {...props}\r\n      dispose={null}\r\n      className=\"cursor-pointer\"\r\n      onClick={(e) => {\r\n        e.stopPropagation();\r\n        props.onClick();\r\n      }}\r\n      rotateOnAxis={{ axis: [0, 0, 0], angle: 3.14 / 2 }}\r\n    >\r\n      {copiedScene.children.map((_, i) => (\r\n        <CloudGLTFGroup\r\n          key={i + _.name}\r\n          {...props}\r\n          node={_}\r\n          toggleActiveMesh={toggleActiveMesh}\r\n          index={i}\r\n        />\r\n      ))}\r\n    </group>\r\n  );\r\n}\r\n\r\nfunction CloudGLTFGroup({ ...props }) {\r\n  const meshRef = useRef();\r\n\r\n  return (\r\n    <mesh\r\n      geometry={props.node.geometry}\r\n      material={props.node.material}\r\n      ref={meshRef}\r\n      onPointerOver={(e) => {\r\n        e.stopPropagation();\r\n        props.onHover(meshRef);\r\n      }}\r\n      onPointerOut={(e) => props.onHover(null)}\r\n      onClick={(e) => props.toggleActiveMesh(e, meshRef)}\r\n    >\r\n      {props.node.children.length > 0 && (\r\n        <group>\r\n          {props.node.children.map((_, i) => (\r\n            <CloudGLTFGroup key={i + _.name} {...props} node={_} index={i} />\r\n          ))}\r\n        </group>\r\n      )}\r\n      <meshStandardMaterial\r\n        color={PART_COLOR[props.index]}\r\n        metalness={1}\r\n        roughness={0.4}\r\n        ambientIntensity={0.2}\r\n        aoMapIntensity={1}\r\n        envMapIntensity={1}\r\n        displacementScale={2.436143}\r\n        normalScale={1.0}\r\n      />\r\n      <Html distanceFactor={30}>\r\n        <div className=\"ms-fontWeight-bold content\">Engine Load - 42%</div>\r\n      </Html>\r\n    </mesh>\r\n  );\r\n}\r\n"],"names":["CloudGLTF","props","scene","useGLTF","cloudGlbURL","group","useRef","copiedScene","useMemo","children","forEach","object","isMesh","material","clone","toggleActiveMesh","e","meshId","stopPropagation","activeMesh","onHover","ref","dispose","className","onClick","rotateOnAxis","axis","angle","map","_","i","CloudGLTFGroup","node","index","name","meshRef","geometry","onPointerOver","onPointerOut","length","color","PART_COLOR","metalness","roughness","ambientIntensity","aoMapIntensity","envMapIntensity","displacementScale","normalScale","Html","distanceFactor"],"sourceRoot":""}