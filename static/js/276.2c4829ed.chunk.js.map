{"version":3,"file":"static/js/276.2c4829ed.chunk.js","mappings":"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","sources":["../node_modules/@react-three/drei/core/meshBounds.js","shared/cloud-gtlf/cloud-gtlf.js"],"sourcesContent":["import { Matrix4, Ray, Sphere, Vector3 } from 'three';\n\nconst _inverseMatrix = new Matrix4();\n\nconst _ray = new Ray();\n\nconst _sphere = new Sphere();\n\nconst _vA = new Vector3();\n\nfunction meshBounds(raycaster, intersects) {\n  const geometry = this.geometry;\n  const material = this.material;\n  const matrixWorld = this.matrixWorld;\n  if (material === undefined) return; // Checking boundingSphere distance to ray\n\n  if (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n\n  _sphere.copy(geometry.boundingSphere);\n\n  _sphere.applyMatrix4(matrixWorld);\n\n  if (raycaster.ray.intersectsSphere(_sphere) === false) return;\n\n  _inverseMatrix.copy(matrixWorld).invert();\n\n  _ray.copy(raycaster.ray).applyMatrix4(_inverseMatrix); // Check boundingBox before continuing\n\n\n  if (geometry.boundingBox !== null && _ray.intersectBox(geometry.boundingBox, _vA) === null) return;\n  intersects.push({\n    distance: _vA.distanceTo(raycaster.ray.origin),\n    point: _vA.clone(),\n    object: this\n  });\n}\n\nexport { meshBounds };\n","import { meshBounds, useGLTF } from \"@react-three/drei\";\r\nimport { useMemo, useRef } from \"react\";\r\nimport { MeshStandardMaterial } from \"three\";\r\n\r\nimport \"./cloud-gtlf.scss\";\r\n\r\nexport default function CloudGLTF({ ...props }) {\r\n  const { scene } = useGLTF(props.cloudGlbURL);\r\n  const group = useRef();\r\n\r\n  const copiedScene = useMemo(() => {\r\n    scene.children.forEach(function (m) {\r\n      if (m.isMesh) {\r\n        m.material = new MeshStandardMaterial({\r\n          color: m.material.color,\r\n        });\r\n      }\r\n    });\r\n    return scene.clone();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [scene.uuid]);\r\n\r\n  const toggleActiveMesh = (e, meshId) => {\r\n    e.stopPropagation();\r\n    if (meshId === props.activeMesh) {\r\n      props.onHover(null);\r\n    } else {\r\n      props.onHover(meshId);\r\n    }\r\n  };\r\n\r\n  if (props.fast) {\r\n    return (\r\n      <group ref={group} {...props} dispose={null}>\r\n        <primitive object={copiedScene} />\r\n      </group>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <group ref={group} {...props} dispose={null} className=\"cursor-pointer\">\r\n      {copiedScene.children.map((_, i) => (\r\n        <CloudGLTFGroup\r\n          key={i + _.name}\r\n          {...props}\r\n          node={_}\r\n          toggleActiveMesh={toggleActiveMesh}\r\n          index={i}\r\n        />\r\n      ))}\r\n    </group>\r\n  );\r\n}\r\n\r\nfunction CloudGLTFGroup({ ...props }) {\r\n  const meshRef = useRef();\r\n  // useBVH(meshRef);\r\n\r\n  if (props.node.type === \"Group\") {\r\n    return (\r\n      <group\r\n        rotation={props.node.rotation}\r\n        position={props.node.position}\r\n        scale={props.node.scale}\r\n        frustumCulled\r\n      >\r\n        {props.node.children.length > 0 &&\r\n          props.node.children.map((_, i) => (\r\n            <CloudGLTFGroup key={i + _.name} {...props} node={_} index={i} />\r\n          ))}\r\n      </group>\r\n    );\r\n  }\r\n  return (\r\n    <mesh\r\n      geometry={props.node.geometry}\r\n      material={props.node.material}\r\n      rotation={props.node.rotation}\r\n      position={props.node.position}\r\n      ref={meshRef}\r\n      raycast={meshBounds}\r\n      scale={props.node.scale}\r\n      onPointerOver={(e) => {\r\n        e.stopPropagation();\r\n        props.onHover(meshRef);\r\n      }}\r\n      onPointerOut={(e) => {\r\n        e.stopPropagation();\r\n        props.onHover(null);\r\n      }}\r\n      onClick={(e) => {\r\n        e.stopPropagation();\r\n        props.onHover(meshRef);\r\n      }}\r\n    >\r\n      {props.node.children.length > 0 &&\r\n        props.node.children.map((_, i) => (\r\n          <CloudGLTFGroup key={i + _.name} {...props} node={_} index={i} />\r\n        ))}\r\n    </mesh>\r\n  );\r\n}\r\n"],"names":["_inverseMatrix","Matrix4","_ray","Ray","_sphere","Sphere","_vA","Vector3","meshBounds","raycaster","intersects","geometry","this","material","matrixWorld","undefined","boundingSphere","computeBoundingSphere","copy","applyMatrix4","ray","intersectsSphere","invert","boundingBox","intersectBox","push","distance","distanceTo","origin","point","clone","object","CloudGLTF","props","scene","useGLTF","cloudGlbURL","group","useRef","copiedScene","useMemo","children","forEach","m","isMesh","MeshStandardMaterial","color","uuid","toggleActiveMesh","e","meshId","stopPropagation","activeMesh","onHover","fast","ref","dispose","className","map","_","i","CloudGLTFGroup","node","index","name","meshRef","type","rotation","position","scale","frustumCulled","length","raycast","onPointerOver","onPointerOut","onClick"],"sourceRoot":""}