{"version":3,"file":"static/js/605.54b18b88.chunk.js","mappings":"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","sources":["shared/cloud-gtlf/cloud-gtlf.js","config/constants.js","shared/bb-anchor.js","shared/truck-cloud-gtlf/truck-params.js","shared/truck-cloud-gtlf/truck-cloud-gtlf-group.js","shared/truck-cloud-gtlf/truck-cloud-gtlf.js","components/nodes/node.js","components/site-canvas/site-playground/site-scene.js","components/site-canvas/site-playground/site-playground.js"],"sourcesContent":["import { meshBounds, useCursor, useGLTF } from \"@react-three/drei\";\r\nimport { forwardRef, useMemo, useRef, useState } from \"react\";\r\nimport { MeshBasicMaterial, MeshStandardMaterial } from \"three\";\r\nimport { isMobile } from \"../../utils/utils\";\r\n\r\nimport \"./cloud-gtlf.scss\";\r\n\r\nexport const CloudGLTF = forwardRef((props, ref) => {\r\n  const { scene } = useGLTF(props.cloudGlbURL);\r\n  const [hovered, set] = useState();\r\n  useCursor(hovered, \"pointer\");\r\n\r\n  // const group = useRef();\r\n  const isMob = isMobile();\r\n\r\n  const copiedScene = useMemo(() => {\r\n    scene.children.forEach(function (m) {\r\n      if (m.isMesh) {\r\n        if (props.fast || isMob) {\r\n          m.material = new MeshBasicMaterial({ color: m.material.color });\r\n        } else {\r\n          m.material = new MeshStandardMaterial({\r\n            color: m.material.color,\r\n            metalness: 1,\r\n            emissive: 1,\r\n            roughness: 0.5,\r\n          });\r\n        }\r\n      }\r\n    });\r\n    return scene.clone();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [scene.uuid]);\r\n\r\n  const onPointerOver = (e) => {\r\n    e.stopPropagation();\r\n    set(true);\r\n  };\r\n\r\n  const onPointerOut = (e) => {\r\n    e.stopPropagation();\r\n    set(false);\r\n  };\r\n\r\n  if (props.fast) {\r\n    return (\r\n      <group\r\n        ref={ref}\r\n        {...props}\r\n        dispose={null}\r\n        onPointerOver={onPointerOver}\r\n        onPointerOut={onPointerOut}\r\n      >\r\n        <primitive object={copiedScene} />\r\n      </group>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <group\r\n      ref={ref}\r\n      {...props}\r\n      dispose={null}\r\n      onPointerOver={onPointerOver}\r\n      onPointerOut={onPointerOut}\r\n      className=\"cursor-pointer\"\r\n    >\r\n      {copiedScene.children.map((_, i) => (\r\n        <CloudGLTFGroup\r\n          key={i + _.name}\r\n          {...props}\r\n          node={_}\r\n          index={i}\r\n          onHover={() => props.onHover(ref)}\r\n        />\r\n      ))}\r\n    </group>\r\n  );\r\n});\r\n\r\nfunction CloudGLTFGroup({ ...props }) {\r\n  const meshRef = useRef();\r\n  // useBVH(meshRef);\r\n\r\n  if (props.node.type === \"Group\") {\r\n    return (\r\n      <group\r\n        rotation={props.node.rotation}\r\n        position={props.node.position}\r\n        scale={props.node.scale}\r\n        frustumCulled\r\n      >\r\n        {props.node.children.length > 0 &&\r\n          props.node.children.map((_, i) => (\r\n            <CloudGLTFGroup key={i + _.name} {...props} node={_} index={i} />\r\n          ))}\r\n      </group>\r\n    );\r\n  }\r\n  return (\r\n    <mesh\r\n      geometry={props.node.geometry}\r\n      material={props.node.material}\r\n      rotation={props.node.rotation}\r\n      position={props.node.position}\r\n      ref={meshRef}\r\n      raycast={meshBounds}\r\n      scale={props.node.scale}\r\n      onPointerOver={(e) => {\r\n        e.stopPropagation();\r\n        props.onHover(meshRef);\r\n      }}\r\n      onPointerOut={(e) => {\r\n        e.stopPropagation();\r\n        props.onHover(null);\r\n      }}\r\n      onClick={(e) => {\r\n        e.stopPropagation();\r\n        props.onHover(meshRef);\r\n      }}\r\n    >\r\n      {props.node.children.length > 0 &&\r\n        props.node.children.map((_, i) => (\r\n          <CloudGLTFGroup key={i + _.name} {...props} node={_} index={i} />\r\n        ))}\r\n    </mesh>\r\n  );\r\n}\r\n\r\nexport default CloudGLTF;\r\n","export const DEFAULT_TRUCK_CONFIG = {\r\n  engine: \"Solid3034_60\",\r\n  trans: \"Solid1061\",\r\n  fe: \"Solid3034_49\",\r\n  pe: \"Solid1040\",\r\n  chassis: \"Solid3034_36\",\r\n};\r\n","import { useFrame } from \"@react-three/fiber\";\r\nimport * as React from \"react\";\r\nimport { Box3, Vector3 } from \"three\";\r\n\r\nconst boundingBox = new Box3();\r\nconst boundingBoxSize = new Vector3();\r\n\r\nexport const BBAnchor = ({ anchor, ...props }) => {\r\n  const ref = React.useRef(null);\r\n  const parentRef = React.useRef(null);\r\n\r\n  // Reattach group created by this component to the parent's parent,\r\n  // so it becomes a sibling of its initial parent.\r\n  // We do that so the children have no impact on a bounding box of a parent.\r\n  React.useEffect(() => {\r\n    if (ref.current?.parent?.parent) {\r\n      parentRef.current = ref.current.parent;\r\n      ref.current.parent.parent.add(ref.current);\r\n    }\r\n  }, []);\r\n\r\n  useFrame(() => {\r\n    if (parentRef.current) {\r\n      boundingBox.setFromObject(parentRef.current);\r\n      boundingBox.getSize(boundingBoxSize);\r\n      let { pX, pY, pZ } = parentRef.current.position;\r\n      if (pX && pY && pZ) {\r\n        ref.current.position.set(\r\n          parentRef.current.position.x + (boundingBoxSize.x * anchor[0]) / 2,\r\n          parentRef.current.position.y + (boundingBoxSize.y * anchor[1]) / 2,\r\n          parentRef.current.position.z + (boundingBoxSize.z * anchor[2]) / 2\r\n        );\r\n      } else {\r\n        ref.current.position.set(\r\n          parentRef.current.geometry.boundingBox.min.x + anchor[0],\r\n          parentRef.current.geometry.boundingBox.min.y + anchor[1],\r\n          parentRef.current.geometry.boundingBox.min.z + anchor[2]\r\n        );\r\n      }\r\n    }\r\n  });\r\n\r\n  return <group ref={ref} {...props} />;\r\n};\r\n","import { Icon } from \"@fluentui/react\";\r\nimport { BBAnchor as DreiBBAnchor, Html } from \"@react-three/drei\";\r\nimport { DEFAULT_TRUCK_CONFIG } from \"../../config/constants\";\r\nimport { UNIT_MAP } from \"../../config/unit-mapping\";\r\nimport { BBAnchor } from \"../bb-anchor\";\r\n\r\nexport default function TruckParams({ ...props }) {\r\n  const { engine, trans, pe, fe, chassis } = DEFAULT_TRUCK_CONFIG;\r\n\r\n  return (\r\n    <>\r\n      {props.node.name === engine && props.pump[\"Engine Load\"] ? (\r\n        <BBAnchor anchor={[0, 0, 0]}>\r\n          <Html>\r\n            <div className=\"content\">\r\n              <Icon iconName=\"LightningBolt\" />\r\n              {props.pump[\"Engine Load\"].toFixed(1) + UNIT_MAP[\"Engine Load\"]}\r\n            </div>\r\n          </Html>\r\n        </BBAnchor>\r\n      ) : null}\r\n      {props.node.name === trans && props.pump[\"Trans Gear\"] ? (\r\n        <DreiBBAnchor anchor={[1, 1, 1]}>\r\n          <Html>\r\n            <div className=\"content\">\r\n              <Icon iconName=\"Settings\" />\r\n              {props.pump[\"Trans Gear\"].toFixed(1) + UNIT_MAP[\"Trans Gear\"]}\r\n            </div>\r\n          </Html>\r\n        </DreiBBAnchor>\r\n      ) : null}\r\n      {props.node.name === fe && props.pump[\"Horse Power\"] ? (\r\n        <BBAnchor anchor={[0, 0, 0]}>\r\n          <Html>\r\n            <div className=\"content\">\r\n              {props.pump[\"Horse Power\"].toFixed(1) +\r\n                UNIT_MAP[\"Calc Horse Power\"]}\r\n            </div>\r\n          </Html>\r\n        </BBAnchor>\r\n      ) : null}\r\n      {props.node.name === pe && props.pump[\"Pump Rate\"] ? (\r\n        <BBAnchor anchor={[0, 0, 0]}>\r\n          <Html>\r\n            <div className=\"content\">\r\n              <Icon iconName=\"Drop\" />\r\n\r\n              {props.pump[\"Pump Rate\"].toFixed(1) + UNIT_MAP[\"Pump Rate\"]}\r\n            </div>\r\n          </Html>\r\n        </BBAnchor>\r\n      ) : null}\r\n      {props.node.name === chassis ? (\r\n        <BBAnchor anchor={[0, 0, 0]}>\r\n          <Html>\r\n            <div className=\"chassis-content\">{props.pump[\"Pump Position\"]}</div>\r\n          </Html>\r\n        </BBAnchor>\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n","import { useBVH, useCursor } from \"@react-three/drei\";\r\nimport React, { useRef, useState } from \"react\";\r\nimport \"./truck-cloud-gtlf.scss\";\r\nimport TruckParams from \"./truck-params\";\r\n\r\nexport function TruckCloudGTLFGroup({ ...props }) {\r\n  const meshRef = useRef();\r\n  const [hovered, set] = useState();\r\n  useCursor(hovered, \"pointer\");\r\n  useBVH(meshRef);\r\n  if (props.index > 400) {\r\n    return;\r\n  }\r\n  const onPointerOver = (e) => {\r\n    e.stopPropagation();\r\n\r\n    if (!props.show) {\r\n      return;\r\n    }\r\n    props.onHover(meshRef);\r\n    set(true);\r\n  };\r\n\r\n  const onPointerOut = (e) => {\r\n    e.stopPropagation();\r\n    if (!props.show) {\r\n      return;\r\n    }\r\n    set(false);\r\n    props.onHover(null);\r\n  };\r\n\r\n  const onClick = (e) => {\r\n    e.stopPropagation();\r\n    console.log(props.node.name);\r\n    if (!props.show) {\r\n      return;\r\n    }\r\n    switch (e.detail) {\r\n      case 1: {\r\n        props.onClick(true);\r\n        break;\r\n      }\r\n      default: {\r\n        props.onDoubleClick();\r\n\r\n        break;\r\n      }\r\n    }\r\n  };\r\n\r\n  if (props.node.type.toLowerCase() !== \"mesh\") {\r\n    return (\r\n      <group\r\n        rotation={props.node.rotation}\r\n        position={props.node.position}\r\n        scale={props.node.scale}\r\n        frustumCulled\r\n      >\r\n        {props.node.children.length > 0 &&\r\n          props.node.children.map((_, i) => (\r\n            <TruckCloudGTLFGroup\r\n              key={i + _.name}\r\n              {...props}\r\n              node={_}\r\n              index={i + props.index}\r\n            />\r\n          ))}\r\n      </group>\r\n    );\r\n  }\r\n\r\n  if (props.node.type.toLowerCase() === \"mesh\") {\r\n    // const geometry = new BufferGeometry({ ...props.node.geometry });\r\n    return (\r\n      <mesh\r\n        geometry={props.node.geometry}\r\n        material={props.node.material}\r\n        rotation={props.node.rotation}\r\n        position={props.node.position}\r\n        ref={meshRef}\r\n        scale={props.node.scale}\r\n        onPointerOver={onPointerOver}\r\n        onPointerOut={onPointerOut}\r\n        onClick={onClick}\r\n        frustumCulled\r\n      >\r\n        {props.node.children.length > 0 &&\r\n          props.node.children.map((_, i) => (\r\n            <TruckCloudGTLFGroup\r\n              key={i + _.name}\r\n              {...props}\r\n              node={_}\r\n              index={i + props.index}\r\n            />\r\n          ))}\r\n        {props.isActive && props.show ? <TruckParams {...props} /> : null}\r\n      </mesh>\r\n    );\r\n  }\r\n}\r\n","import { Select } from \"@react-three/drei\";\r\nimport { useFrame } from \"@react-three/fiber\";\r\nimport React, { useRef } from \"react\";\r\nimport { TruckCloudGTLFGroup } from \"./truck-cloud-gtlf-group\";\r\nimport \"./truck-cloud-gtlf.scss\";\r\n// const TruckCloudGTLFGroup = lazy(() => import(\"./truck-cloud-gtlf-group\"));\r\n\r\nexport default function TruckCloudGTLF({ ...props }) {\r\n  const group = useRef();\r\n\r\n  useFrame(() => {\r\n    group.current.visible = props.show;\r\n  });\r\n\r\n  if (props.fast) {\r\n    return (\r\n      <group ref={group} {...props} dispose={null}>\r\n        <Select\r\n          box\r\n          multiple\r\n          onChange={(m) => {\r\n            if (m[0]) {\r\n              props.onHover(m[0]);\r\n              props.onClick(true);\r\n            }\r\n          }}\r\n        >\r\n          <primitive object={props.scene} />\r\n        </Select>\r\n      </group>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <group ref={group} {...props} dispose={null} frustumCulled>\r\n      {props.scene.children.map((_, i) => (\r\n        <TruckCloudGTLFGroup key={i + _.name} {...props} node={_} index={i} />\r\n      ))}\r\n    </group>\r\n  );\r\n}\r\n","import { QuadraticBezierLine } from \"@react-three/drei\";\r\nimport { useFrame } from \"@react-three/fiber\";\r\nimport {\r\n  createContext,\r\n  forwardRef,\r\n  useContext,\r\n  useLayoutEffect,\r\n  useMemo,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport * as THREE from \"three\";\r\n\r\nconst context = createContext();\r\nconst Circle = forwardRef(\r\n  (\r\n    {\r\n      children,\r\n      opacity = 1,\r\n      radius = 0.05,\r\n      segments = 32,\r\n      color = \"#ff1050\",\r\n      ...props\r\n    },\r\n    ref\r\n  ) => (\r\n    <mesh ref={ref} {...props}>\r\n      <circleGeometry args={[radius, segments]} />\r\n      <meshBasicMaterial\r\n        transparent={opacity < 1}\r\n        opacity={opacity}\r\n        color={color}\r\n      />\r\n      {children}\r\n    </mesh>\r\n  )\r\n);\r\n\r\nexport function Nodes({ children }) {\r\n  const group = useRef();\r\n  const [nodes, set] = useState([]);\r\n  const lines = useMemo(() => {\r\n    const lines = [];\r\n    for (let node of nodes)\r\n      node.connectedTo\r\n        .map((ref) => [node.position, ref.current.position])\r\n        .forEach(([start, end]) =>\r\n          lines.push({\r\n            start: start.clone().add({ x: 0.35, y: 0, z: 0 }),\r\n            end: end.clone().add({ x: -0.35, y: 0, z: 0 }),\r\n          })\r\n        );\r\n    return lines;\r\n  }, [nodes]);\r\n  useFrame((_, delta) =>\r\n    group.current.children.forEach(\r\n      (group) =>\r\n        (group.children[0].material.uniforms.dashOffset.value -= delta * 10)\r\n    )\r\n  );\r\n  return (\r\n    <context.Provider value={set}>\r\n      <group ref={group}>\r\n        {lines.map((line, index) => (\r\n          <group key={index + \"Bezier group\"}>\r\n            <QuadraticBezierLine\r\n              key={index + \"Bezier spot\"}\r\n              {...line}\r\n              color=\"white\"\r\n              dashed\r\n              dashScale={50}\r\n              gapSize={20}\r\n            />\r\n            <QuadraticBezierLine\r\n              key={index + \"Bezier line\"}\r\n              {...line}\r\n              color=\"red\"\r\n              lineWidth={3}\r\n              transparent\r\n              opacity={0.5}\r\n            />\r\n          </group>\r\n        ))}\r\n      </group>\r\n      {children}\r\n      {lines.map(({ start, end }, index) => (\r\n        <group key={index + \"Bezier circle\"} position-z={1}>\r\n          <Circle position={start} />\r\n          <Circle position={end} />\r\n        </group>\r\n      ))}\r\n    </context.Provider>\r\n  );\r\n}\r\n\r\nexport const Node = forwardRef(\r\n  (\r\n    { color = \"black\", name, connectedTo = [], position = [0, 0, 0], ...props },\r\n    ref\r\n  ) => {\r\n    const set = useContext(context);\r\n    const [pos] = useState(() => new THREE.Vector3(...position));\r\n    const state = useMemo(\r\n      () => ({ position: pos, connectedTo }),\r\n      [pos, connectedTo]\r\n    );\r\n    // Register this node on mount, unregister on unmount\r\n    useLayoutEffect(() => {\r\n      set((nodes) => [...nodes, state]);\r\n      return () => void set((nodes) => nodes.filter((n) => n !== state));\r\n    }, [state, pos, set]);\r\n    // Drag n drop, hover\r\n    return (\r\n      <Circle\r\n        ref={ref}\r\n        opacity={0.2}\r\n        radius={0.5}\r\n        color={color}\r\n        position={pos}\r\n        {...props}\r\n      ></Circle>\r\n    );\r\n  }\r\n);\r\n","import { useMemo } from \"react\";\r\nimport { MeshBasicMaterial, MeshStandardMaterial } from \"three\";\r\nimport { isMobile } from \"../../../utils/utils\";\r\n\r\nexport const useMemoisedScene = (scene, isFast) => {\r\n  const isMob = isMobile();\r\n\r\n  const copiedScene = useMemo(() => {\r\n    const smallObj = [];\r\n    scene.traverse((o) => {\r\n      if (!o.isMesh) {\r\n        console.log(o);\r\n        return;\r\n      }\r\n      var prevMaterial = o.material;\r\n      let radius = o.geometry?.boundingSphere.radius;\r\n      if (radius > 10 && radius < 30) {\r\n        smallObj.push(o);\r\n      }\r\n      if (radius < 300) {\r\n        o.material = new MeshBasicMaterial({\r\n          color: prevMaterial.color,\r\n          reflectivity: 1,\r\n        });\r\n      } else {\r\n        o.material = new MeshStandardMaterial({\r\n          color: prevMaterial.color,\r\n          metalness: 1,\r\n          emissive: 1,\r\n          roughness: prevMaterial.roughness ?? 0.5,\r\n        });\r\n      }\r\n    });\r\n\r\n    smallObj.forEach((o) => {\r\n      o.removeFromParent();\r\n    });\r\n\r\n    return scene.clone();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [scene.uuid]);\r\n\r\n  return { copiedScene };\r\n};\r\n\r\nexport const ROTATION_LEFT = [0, -Math.PI / 2, 0];\r\nexport const ROTATION_RIGHT = [0, Math.PI / 2, 0];\r\n\r\nexport const getPos = (LEFT_POS_START, i, isOnFocus) => {\r\n  return [\r\n    LEFT_POS_START < i ? 15 : -15,\r\n    0 + isOnFocus * 10,\r\n    (i % LEFT_POS_START) * 5,\r\n  ];\r\n};\r\n\r\nexport const WELL_HEAD_POS = [0, -1, -20];\r\nexport const DATA_VAN_POS = [15, 1, -10];\r\nexport const BLENDER_VAN_POS = [10, -1, 35];\r\nexport const MISSILE_POS = [0, 0, 20];\r\nexport const MISSILE_NODE_POS = [0, 1, 20];\r\nexport const DATA_VAN_ROT = [0, Math.PI / 2, 0];\r\n","import { IconButton } from \"@fluentui/react\";\r\nimport { Html, useGLTF } from \"@react-three/drei\";\r\nimport { useThree } from \"@react-three/fiber\";\r\nimport { EffectComposer, Outline } from \"@react-three/postprocessing\";\r\nimport { Suspense, useEffect, useRef, useState } from \"react\";\r\nimport { MODELS } from \"../../../config/azure-gltf\";\r\nimport { PUMPS as HARD_CODED_PUMPS } from \"../../../config/pumps\";\r\n\r\nimport CloudGLTF from \"../../../shared/cloud-gtlf/cloud-gtlf\";\r\nimport TruckCloudGTLF from \"../../../shared/truck-cloud-gtlf/truck-cloud-gtlf\";\r\nimport { isMobile } from \"../../../utils/utils\";\r\nimport { Node, Nodes } from \"../../nodes/node\";\r\nimport {\r\n  BLENDER_VAN_POS,\r\n  DATA_VAN_POS,\r\n  DATA_VAN_ROT,\r\n  getPos,\r\n  MISSILE_NODE_POS,\r\n  MISSILE_POS,\r\n  ROTATION_LEFT,\r\n  ROTATION_RIGHT,\r\n  useMemoisedScene,\r\n  WELL_HEAD_POS,\r\n} from \"./site-scene\";\r\n\r\nfunction SitePlayGround(props) {\r\n  const isMob = isMobile();\r\n  const mRef = useRef(null);\r\n  const nCRef = useRef(null);\r\n  const wRef = useRef(null);\r\n  const dRef = useRef(null);\r\n  const [hovered, onHover] = useState(null);\r\n  const [prevCam, setPrevCam] = useState(null);\r\n  const [focussedTruck, onFocusTruck] = useState(null);\r\n  const { scene } = useGLTF(MODELS.TRUCK);\r\n  const cam = useThree(({ camera }) => camera);\r\n  const cont = useThree(({ controls }) => controls);\r\n  const PUMPS = props.pumpsData.length\r\n    ? props.pumpsData\r\n    : HARD_CODED_PUMPS.slice(0, 7);\r\n  const { copiedScene } = useMemoisedScene(scene);\r\n  const invalidate = useThree(({ invalidate }) => invalidate);\r\n  const isOnFocus = (pump) =>\r\n    !focussedTruck || pump[\"Pump Position\"] === focussedTruck[\"Pump Position\"];\r\n\r\n  useEffect(() => {\r\n    focussedTruck && props.setSelected(focussedTruck[\"Pump Position\"]);\r\n  }, [focussedTruck, props]);\r\n\r\n  function restoreCamera() {\r\n    cam.position.set(\r\n      prevCam.position.x,\r\n      prevCam.position.y,\r\n      prevCam.position.z\r\n    );\r\n    cont?.reset();\r\n\r\n    invalidate();\r\n  }\r\n\r\n  const isActive = (pump) => pump[\"Pump Position\"] === props.selected;\r\n\r\n  const LEFT_POS_START = PUMPS.length / 2;\r\n\r\n  const selected = hovered ? [hovered] : undefined;\r\n\r\n  return (\r\n    <>\r\n      <Nodes>\r\n        <Suspense fallback={null}>\r\n          {PUMPS.map((pump, i) => {\r\n            const [x, y, z] = getPos(\r\n              LEFT_POS_START,\r\n              i,\r\n              focussedTruck &&\r\n                pump[\"Pump Position\"] === focussedTruck[\"Pump Position\"]\r\n            );\r\n            return (\r\n              <TruckCloudGTLF\r\n                key={pump[\"Pump Position\"]}\r\n                position={[x, y, z]}\r\n                onClick={() => {\r\n                  props.setSelected(pump[\"Pump Position\"]);\r\n                  invalidate();\r\n                }}\r\n                onDoubleClick={() => {\r\n                  if (isOnFocus(pump)) {\r\n                    cont?.saveState();\r\n                    const camToSave = {};\r\n                    camToSave.position = cam.position.clone();\r\n                    camToSave.rotation = cam.rotation.clone();\r\n                    camToSave.controlCenter = cont?.target?.clone();\r\n\r\n                    setPrevCam(camToSave);\r\n\r\n                    props.setSelected(pump[\"Pump Position\"]);\r\n                    onFocusTruck(pump);\r\n                    cam.position.set(4.5 * x, y + 9, 3 * z);\r\n                    invalidate();\r\n                  }\r\n                }}\r\n                onHover={onHover}\r\n                isActive={\r\n                  props.selectionOptions[\"Select All\"] || isActive(pump)\r\n                }\r\n                show={isOnFocus(pump)}\r\n                isFocussed={\r\n                  focussedTruck &&\r\n                  pump[\"Pump Position\"] === focussedTruck[\"Pump Position\"]\r\n                }\r\n                scene={copiedScene}\r\n                pump={pump}\r\n                setAlertedParts={props.setAlertedParts}\r\n                rotation={LEFT_POS_START < i ? ROTATION_LEFT : ROTATION_RIGHT}\r\n                cloudGlbURL={MODELS.TRUCK}\r\n                scale={focussedTruck ? 2 : 1}\r\n              />\r\n            );\r\n          })}\r\n        </Suspense>\r\n\r\n        {!focussedTruck ? (\r\n          <>\r\n            <CloudGLTF\r\n              ref={mRef}\r\n              cloudGlbURL={MODELS.MISSILE}\r\n              assetId={4347}\r\n              onClick={(show) => null}\r\n              onHover={onHover}\r\n              position={MISSILE_POS}\r\n            />\r\n            <Node\r\n              ref={nCRef}\r\n              name=\"missile\"\r\n              position={MISSILE_NODE_POS}\r\n              connectedTo={[wRef]}\r\n            />\r\n            <CloudGLTF\r\n              ref={wRef}\r\n              cloudGlbURL={MODELS.WELL_HEAD}\r\n              onClick={(show) => null}\r\n              onHover={onHover}\r\n              position={WELL_HEAD_POS}\r\n              scale={5}\r\n            />\r\n\r\n            <CloudGLTF\r\n              ref={dRef}\r\n              cloudGlbURL={MODELS.DATA_VAN}\r\n              onClick={(show) => null}\r\n              onHover={onHover}\r\n              position={DATA_VAN_POS}\r\n              rotation={DATA_VAN_ROT}\r\n            />\r\n          </>\r\n        ) : null}\r\n        {!isMob && !focussedTruck ? (\r\n          <CloudGLTF\r\n            cloudGlbURL={MODELS.BLENDER}\r\n            onClick={(show) => null}\r\n            fast\r\n            onHover={onHover}\r\n            position={BLENDER_VAN_POS}\r\n            rotation={ROTATION_RIGHT}\r\n          />\r\n        ) : null}\r\n      </Nodes>\r\n\r\n      <EffectComposer multisampling={8} autoClear={false}>\r\n        <Outline\r\n          selection={selected}\r\n          selectionLayer={1}\r\n          visibleEdgeColor=\"white\"\r\n          edgeStrength={5}\r\n        />\r\n      </EffectComposer>\r\n      <Html left portal={props.domNodeRef}>\r\n        {focussedTruck ? (\r\n          <div>\r\n            <IconButton\r\n              className=\"text-neutralPrimary bg-themeLighterAlt\"\r\n              iconProps={{ iconName: \"Back\" }}\r\n              onClick={() => {\r\n                onFocusTruck(null);\r\n                restoreCamera();\r\n                invalidate();\r\n              }}\r\n              text=\"Back to Frac site\"\r\n            />\r\n          </div>\r\n        ) : null}\r\n      </Html>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SitePlayGround;\r\n"],"names":["CloudGLTFGroup","props","meshRef","useRef","node","type","rotation","position","scale","frustumCulled","children","length","map","_","i","index","name","geometry","material","ref","raycast","meshBounds","onPointerOver","e","stopPropagation","onHover","onPointerOut","onClick","forwardRef","scene","useGLTF","cloudGlbURL","useState","hovered","set","useCursor","isMob","isMobile","copiedScene","useMemo","forEach","m","isMesh","fast","MeshBasicMaterial","color","MeshStandardMaterial","metalness","emissive","roughness","clone","uuid","dispose","object","className","DEFAULT_TRUCK_CONFIG","boundingBox","Box3","boundingBoxSize","Vector3","BBAnchor","anchor","React","parentRef","current","parent","add","useFrame","setFromObject","getSize","pX","pY","pZ","x","y","z","min","TruckParams","engine","trans","pe","fe","chassis","pump","Html","Icon","iconName","toFixed","UNIT_MAP","TruckCloudGTLFGroup","useBVH","toLowerCase","show","console","log","detail","onDoubleClick","isActive","TruckCloudGTLF","group","visible","Select","box","multiple","onChange","context","createContext","Circle","opacity","radius","segments","args","transparent","Nodes","nodes","lines","connectedTo","start","end","push","delta","uniforms","dashOffset","value","Provider","line","QuadraticBezierLine","dashed","dashScale","gapSize","lineWidth","Node","useContext","THREE","pos","state","useLayoutEffect","filter","n","ROTATION_LEFT","Math","PI","ROTATION_RIGHT","WELL_HEAD_POS","DATA_VAN_POS","BLENDER_VAN_POS","MISSILE_POS","MISSILE_NODE_POS","DATA_VAN_ROT","mRef","nCRef","wRef","dRef","prevCam","setPrevCam","focussedTruck","onFocusTruck","MODELS","cam","useThree","camera","cont","controls","PUMPS","pumpsData","HARD_CODED_PUMPS","isFast","smallObj","traverse","o","prevMaterial","boundingSphere","reflectivity","removeFromParent","useMemoisedScene","invalidate","isOnFocus","useEffect","setSelected","selected","LEFT_POS_START","undefined","Suspense","fallback","getPos","saveState","camToSave","controlCenter","target","selectionOptions","isFocussed","setAlertedParts","assetId","multisampling","autoClear","selection","selectionLayer","visibleEdgeColor","edgeStrength","left","portal","domNodeRef","IconButton","iconProps","reset","text"],"sourceRoot":""}